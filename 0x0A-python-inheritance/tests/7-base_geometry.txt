`7-base_geometry`` module

How to use ``BaseGeometry``
=================================================

Test Importing class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Test to print the area
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      
    Exception: area() is not implemented

=========================================================

Test to pass a non-integer argument
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    	      
    TypeError: name must be an integer

=====================================================

Test to pass a boolean value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    	      
    TypeError: name must be an integer

===================================================

Test to pass a negative value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	      
    ValueError: name must be greater than 0

===================================================

Test to pass a zero value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      
    ValueError: name must be greater than 0

====================================================

To pass a positive value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)

==================================================

Test to pass one argument to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      
    TypeError: integer_validator() missing 1 required positional argument: 'value'

=================================================
Test to check Integer_validator with no arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

=================================================

Test to pass three arguments to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
    	     
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

=================================================

Test to pass one argument to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      
    TypeError: area() takes 1 positional argument but 2 were given

================================================================

Test to pass two arguments to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5, 5)
    Traceback (most recent call last):
    	      
    TypeError: area() takes 1 positional argument but 3 were given

==================================================

Test to pass tuple to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	     
    TypeError: age must be an integer

===================================================

Test to pass list to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    	      
    TypeError: age must be an integer

=================================================

Test to pass dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              
    TypeError: age must be an integer

===================================================

Test to pass None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
             
    TypeError: age must be an integer
